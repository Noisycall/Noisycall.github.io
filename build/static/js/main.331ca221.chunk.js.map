{"version":3,"sources":["serviceWorker.js","components/Header.jsx","components/Intro.tsx","components/Header1.tsx","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","Component","Intro","state","nextIcon","react_default","a","createElement","src","prevIcon","Jumbotron_default","style","textAlign","Container_default","Row_default","className","CardDeck_default","Card_default","bg","Header","Carousel_default","this","height","width","CarouselItem_default","Image_default","Body","Header1","Navbar","variant","expand","Brand","href","color","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","ReactDOM","render","components_Header1","document","getElementById","components_Intro","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.331ca221.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Image\r\n} from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#home\">\r\n            <span style={{ color: \"#00ff00\" }}>Welcome To Coder's Era</span>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            {/*<Form inline>\r\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                      <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>*/}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\n\r\nclass Intro extends Component {\r\n\r\n  state = {\r\n    nextIcon: (\r\n      <span>\r\n        <img src=\"right.png\" />\r\n      </span>\r\n    ),\r\n    prevIcon: (\r\n      <span>\r\n        <img src=\"left.png\" />\r\n      </span>\r\n    )\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            Welcome to Coder's Era, a place for programmers to learn and succeed\r\n          </h1>\r\n        </Jumbotron>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <CardDeck>\r\n              <Card bg=\"primary\">\r\n                <Card.Header>\r\n                  <Carousel\r\n                    nextIcon={this.state.nextIcon}\r\n                    prevIcon={this.state.prevIcon}\r\n                    style={{height: \"565px\",width: \"366px\", textAlign:\"center\"\r\n                    }}\r\n\r\n                  >\r\n                    <CarouselItem>\r\n                      <Image src=\"PWA1.png\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <img src=\"PWA2.png\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <img src=\"PWA3.png\" />\r\n                    </CarouselItem>\r\n                  </Carousel>\r\n                </Card.Header>\r\n                <Card.Body>Well Then</Card.Body>\r\n              </Card>\r\n              <Card bg=\"primary\">\r\n                <Card.Header>\r\n                  <Carousel\r\n                    nextIcon={this.state.nextIcon}\r\n                    prevIcon={this.state.prevIcon}\r\n                    style={{height: \"565px\",width: \"366px\",textAlign:\"center\"\r\n                    }}\r\n                  >\r\n                    <CarouselItem>\r\n                      <Image src=\"App1.png\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <img src=\"App2.png\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <img src=\"App3.png\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <img src=\"App4.png\" />\r\n                    </CarouselItem>\r\n                  </Carousel>\r\n                </Card.Header>\r\n                <Card.Body>Well Then</Card.Body>\r\n              </Card>\r\n            </CardDeck>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Intro;\r\n","import {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n\r\n} from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Header1 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#home\">\r\n            <span style={{ color: \"#00ff00\" }}>Welcome To Coder's Era</span>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            {/*<Form inline>\r\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                      <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>*/}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header1;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Header from \"./components/Header\";\r\nimport { removeDotSegments } from \"uri-js\";\r\nimport Intro from \"./components/Intro\";\r\nimport Header1 from \"./components/Header1.tsx\"\r\nReactDOM.render(<Header1/>, document.getElementById(\"root\"));\r\nReactDOM.render(<Intro/>,document.getElementById(\"root2\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}