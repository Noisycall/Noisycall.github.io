{"version":3,"sources":["serviceWorker.js","components/ProjCard/ProjCard.tsx","components/Slots/Slots.tsx","components/Rout.jsx","components/Header1/Header1.tsx","components/Footer.tsx","index.js","components/ProjCard/App1.png","components/ProjCard/App2.png","components/ProjCard/App3.png","components/ProjCard/App4.png","components/ProjCard/PWA1.png","components/ProjCard/PWA2.png","components/ProjCard/PWA3.png","components/Header1/codersera.png"],"names":["Boolean","window","location","hostname","match","ProjCard","state","lowervisible","options","root","threshold","handleEnter","event","_this","setState","exampleobj","isIntersecting","console","log","images","PWA1","PWA2","PWA3","Appimages","App1","App2","App3","App4","dowloadlink","react_default","a","createElement","Jumbotron_default","style","textAlign","Button_default","href","variant","size","Container_default","fluid","className","Row_default","fontSize","Col_default","lg","span","offset","Card_default","bg","text","Header","Body","Carousel_default","this","map","image","index","CarouselItem_default","key","src","alt","id","CardDeck_default","fontFamily","block","Component","Slots","searchval","testmap","undefined","slot1","person","name","Group","handleInput","document","getElementById","value","filter","toLowerCase","indexOf","ListGroup_default","fontWeight","ListGroupItem_default","type","Form_default","controlId","Control","as","placeholder","onChange","Table_default","bordered","striped","responsive","Rout","react_router_dom","react_router","path","component","exact","to","push","Header1","vertTrue","resizeEvent","bsBreakpoints","getCurrentBreakpoint","Navbar","expand","Brand","width","Image","logo","rounded","height","color","Toggle","aria-controls","onClick","Collapse","Nav","Link","Footer","handleScroll","scroll","Navbar_default","ReactDOM","render","components_Header1_Header1","components_Rout","components_Footer","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4ebfb3cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport App1 from \"./App1.png\";\nimport App2 from \"./App2.png\";\nimport App3 from \"./App3.png\";\nimport App4 from \"./App4.png\";\nimport PWA1 from \"./PWA1.png\";\nimport PWA2 from \"./PWA2.png\";\nimport PWA3 from \"./PWA3.png\";\n\nclass ProjCard extends Component {\n  state = { lowervisible: \"\" };\n  options = {\n    root: null,\n    threshold: 0\n  };\n\n  handleEnter = (event: any) => {\n    this.setState(() => {\n      let exampleobj = {\n        lowervisible: event.isIntersecting ? \"fado\" : \"invisible\"\n      };\n      console.log(event.isIntersecting);\n      return exampleobj;\n    });\n  };\n\n  images = [PWA1, PWA2, PWA3];\n  Appimages = [App1, App2, App3, App4];\n  dowloadlink =\n    \" https://play.google.com/store/apps/details?id=in.edu.projecthermes.www.mitwpustudentconsole\";\n\n  render():\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n    | string\n    | number\n    | {}\n    | React.ReactNodeArray\n    | React.ReactPortal\n    | boolean\n    | null\n    | undefined {\n    return (\n      <div>\n        <Jumbotron style={{textAlign: \"center\"}}>\n          <h1>\n            Welcome to Coder's Era, a place for programmers to learn and succeed\n          </h1>\n          <hr/>\n\n          <Button href=\"/Slots\" variant={\"outline-info\"} size={\"lg\"}>\n            Recruitment slots\n          </Button>\n        </Jumbotron>\n        <Container fluid className=\"mb-5 mb-lg-3\">\n          {/*Container for Cards*/}\n          <Row style={{ fontSize: 20 }}>\n            <Col lg={{ span: 4, offset: 2 }} className=\"border-right\">\n              {/*Card 1*/}\n              <Card className=\"h-100\" bg=\"dark\" text=\"white\">\n                <Card.Header style={{ textAlign: \"center\" }}>\n                  MIT Student Console\n                </Card.Header>\n                <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\n                  The MIT Student console enables the students an easy to use\n                  platform to get organized and stay on top of all their college\n                  activities and studies\n                  <hr />\n                  <Carousel>\n                    {this.Appimages.map((image, index) => (\n                        <CarouselItem key={index}>\n                        <img src={image} className=\"img-fluid\" alt={image} />\n                      </CarouselItem>\n                    ))}\n                  </Carousel>\n                  <hr />\n                  <div className=\"d-flex justify-content-center flex-wrap\">\n                    {/*<Button variant=\"info\">MIT Student Console</Button>*/}\n                    <Button variant=\"success\" href={this.dowloadlink} size=\"lg\">\n                      Download\n                    </Button>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n            {/*Card 2*/}\n            <Col lg={4}>\n              <Card\n                className=\"mt-4 mb-lg-0 mt-lg-0 h-100\"\n                bg=\"dark\"\n                text=\"white\"\n              >\n                <Card.Header style={{ textAlign: \"center\" }}>\n                  MIT Student Console\n                </Card.Header>\n\n                <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\n                  The MIT Student console PWA similar functionality to the App,\n                  but in a platform independent manner.\n                  <hr />\n                  <Carousel>\n                    {this.images.map((image, index) => (\n                        <CarouselItem key={index}>\n                        <img src={image} className=\"img-fluid\" alt={image} />\n                      </CarouselItem>\n                    ))}\n                  </Carousel>\n                  <hr />\n                  <div className=\"d-flex justify-content-center flex-wrap\">\n                    {/*<Button variant=\"info\">MIT PWA</Button>*/}\n                    <Button\n                      variant=\"success\"\n                      size={\"lg\"}\n                      href={\"http://mitconsolelite.codersera.tech/\"}\n                    >\n                      Link\n                    </Button>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n\n        <Jumbotron id=\"lower\" className={this.state.lowervisible}>\n          <h2 className=\"text-center\">About Us</h2>\n          <br/>\n          <CardDeck style={{fontFamily: \"Verdana\", fontSize: \"14\"}}>\n            <Card>\n              <Card.Header>\n                <b>Harsh (Founder)</b>\n              </Card.Header>\n\n              <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\n                The founder of the club and a very talented programmer, he has\n                experience making Android Apps for the last 3 years. He has a\n                talent for picking the best people to work with and will go\n                sleepless in his quest to deliver as many features as possible\n                to the users of his apps. You might be familiar with his work in\n                the form of the MIT Student Console App Console.\n                <Button\n                    className=\"mt-md-1 mt-2\"\n                    href={\"mailto:harsh@codersera.tech\"}\n                    block={true}\n                    variant={\"primary\"}\n                >\n                  Email\n                </Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Header>\n                <b>Manas</b>\n              </Card.Header>\n              <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\n                A Programmer to his core, Manas has worked at more PHP code than\n                I would even care to look at, but his importance in building\n                reliable backends cannot be understated. He is also the primary\n                developer of the MIT PWA as well as a Co-Developer on the MIT\n                Student Console App.\n                <Button\n                    className=\"mt-md-0 mt-2\"\n                    href={\"mailto:manas@codersera.tech\"}\n                    block={true}\n                    variant={\"primary\"}\n                >\n                  Email\n                </Button>\n              </Card.Body>\n            </Card>\n            <Card>\n              <Card.Header>\n                <b>Kunal</b>\n              </Card.Header>\n              <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\n                Hello, I'm the one who created this website, so if you didn't\n                like it I'm sorry to disappoint you ☹️. However, if you liked\n                it, please let me know at the linked email 😃.\n                <Button\n                    className=\"mt-md-0 mt-2\"\n                    href={\"mailto:kunal@codersera.tech\"}\n                    block={true}\n                    variant={\"primary\"}\n                >\n                  Email\n                </Button>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default ProjCard;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport slot1 from \"./codebeautify.json\";\nimport Table from \"react-bootstrap/Table\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Slots extends Component {\n  state = {\n    searchval: \"\",\n    testmap: undefined\n  };\n  testmap = slot1.map((person, index) => (\n    <tr>\n      <td>{index + 1}</td>\n      <td>{person.name}</td>\n      <td>{person.Group}</td>\n    </tr>\n  ));\n\n  handleInput = () => {\n    // @ts-ignore\n    const searchval = document.getElementById(\"hello\").value;\n    this.state.searchval = searchval;\n    console.log(this.state.searchval);\n    let subset = slot1.filter((person: any) => {\n      let na = person.name;\n      return na.toLowerCase().indexOf(this.state.searchval.toLowerCase()) >= 0;\n    });\n\n    let testmap = subset.map((person, index) => (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{person.name}</td>\n        <td>{person.Group}</td>\n      </tr>\n    ));\n    this.setState({ testmap });\n  };\n  componentDidMount(): void {\n    this.handleInput();\n  }\n\n  render():\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n    | string\n    | number\n    | {}\n    | React.ReactNodeArray\n    | React.ReactPortal\n    | boolean\n    | null\n    | undefined {\n    return (\n      <div>\n        <Container className=\"mt-1\">\n          <Row className=\"m-3\">\n            <Col>\n              <ListGroup style={{ textAlign: \"center\", fontWeight: \"bold\" }}>\n                <ListGroupItem variant={\"warning\"}>\n                  If you have registered and do not see your name, please\n                  contact us here\n                  <Button\n                    type={\"button\"}\n                    size={\"sm\"}\n                    variant={\"warning\"}\n                    className=\"mx-2\"\n                    href=\"mailto:recruitment@codersera.tech\"\n                  >\n                    Contact\n                  </Button>\n                </ListGroupItem>\n                <ListGroupItem variant={\"danger\"}>\n                  If you have missed your slots so far, Friday will be the last\n                  day for first round of interviews\n                </ListGroupItem>\n                <ListGroupItem variant={\"info\"}>Location is N204</ListGroupItem>\n                <ListGroupItem variant={\"primary\"}>\n                  Slot 7 - 3:45 - 4:30 PM IST - 2/8/19\n                </ListGroupItem>\n                <ListGroupItem variant={\"secondary\"}>\n                  Slot 8 - 4:30 - 5:15 PM IST - 2/8/19\n                </ListGroupItem>\n                <ListGroupItem variant=\"dark\">\n                  Slot 9 - 5:15 - 6:00 PM IST - 2/8/19\n                </ListGroupItem>\n              </ListGroup>\n            </Col>\n          </Row>\n          {/*<Row>\n            <Col className={\"text-center\"}>\n              <h3> Search your name is the given field to find your slot</h3>\n            </Col>\n          </Row>*/}\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group controlId=\"formName\">\n                  <Form.Control\n                    id=\"hello\"\n                    as=\"input\"\n                    placeholder=\"Enter Your Name\"\n                    onChange={this.handleInput}\n                  />\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table bordered variant=\"dark\" striped={true} responsive={true}>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Slot</th>\n                  </tr>\n                </thead>\n                <tbody>{this.state.testmap}</tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Slots;\n","import React, {Component} from \"react\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\n\nimport ProjCard from \"./ProjCard/ProjCard\";\nimport Slots from \"./Slots/Slots\";\n\nclass Rout extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n        <div>\n            <Switch>\n                <Route path=\"/\" component={ProjCard} exact/>\n                <Route path=\"/Slots\" component={Slots}/>\n                <Redirect to=\"/\" push/>\n            </Switch>\n        </div>\n        </BrowserRouter>\n    );\n  }\n}\nexport default Rout;\n","import {Image, Nav, Navbar} from \"react-bootstrap\";\nimport React, {Component} from \"react\";\nimport bsBreakpoints from \"bs-breakpoints\";\nimport logo from \"./codersera.png\";\n\nclass Header1 extends Component {\n  state = {\n    vertTrue: false\n  };\n\n  resizeEvent = () => {\n    if (\n      !(\n        bsBreakpoints.getCurrentBreakpoint() === \"large\" ||\n        bsBreakpoints.getCurrentBreakpoint() === \"xLarge\"\n      )\n    ) {\n      this.setState({ vertTrue: true });\n    } else this.setState({ vertTrue: false });\n  };\n\n  render():\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n    | string\n    | number\n    | {}\n    | React.ReactNodeArray\n    | React.ReactPortal\n    | boolean\n    | null\n    | undefined {\n    return (\n      <div>\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"/home\" style={{width: \"200px\"}}>\n            <Image src={logo} rounded height=\"10%\" width=\"15%\"/>\n            <span style={{ color: \"#00ff00\" }} className=\"m-1\">\n              Coders' Era\n            </span>\n          </Navbar.Brand>\n          <Navbar.Toggle\n            aria-controls=\"basic-navbar-nav\"\n            className=\"ml-auto\"\n            onClick={this.resizeEvent}\n          />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto text-right\" id=\"test\">\n              {/*<Nav.Item>*/}\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/Slots\">Recruitment Slots</Nav.Link>\n              {/*<ButtonGroup vertical={this.state.vertTrue}>\n                  <Button href=\"#/\" variant=\"outline-secondary\">\n                    Home\n                  </Button>\n                  <Button variant=\"outline-secondary\" href=\"http://codersera.tech/recruitment\">\n                    Recruitment\n                  </Button>\n                </ButtonGroup>*/}\n              {/*</Nav.Item>*/}\n\n              {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>*/}\n            </Nav>\n            {/*<Form inline>\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                      <Button variant=\"outline-success\">Search</Button>\n                  </Form>*/}\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nexport default Header1;\n","import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Footer extends Component {\n    handleScroll = () => {\n        window.scroll(0, 0);\n    };\n\n    render():\n        | React.ReactElement<any, string | React.JSXElementConstructor<any>>\n        | string\n        | number\n        | {}\n        | React.ReactNodeArray\n        | React.ReactPortal\n        | boolean\n        | null\n        | undefined {\n        return (\n            <div className=\"mt-3\">\n                <Navbar bg=\"dark\" variant=\"dark\" expand={\"lg\"}>\n\n                    <Button variant=\"secondary\" href=\"mailto:recruitment@codersera.tech\">\n                        Contact Us\n                    </Button>\n\n                    <Button\n                        variant=\"secondary\"\n                        className=\"ml-auto\"\n                        onClick={this.handleScroll}\n                    >\n                        Scroll to Top\n                    </Button>\n\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Rout from \"./components/Rout\";\r\nimport Header1 from \"./components/Header1/Header1\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nReactDOM.render(<Header1 />, document.getElementById(\"header1\"));\r\nReactDOM.render(<Rout />, document.getElementById(\"root\"));\r\nReactDOM.render(<Footer />, document.getElementById(\"footer1\"));\r\n//ReactDOM.render(<Header1/>, document.getElementById(\"root\"));\r\n//ReactDOM.render(<Intro/>,document.getElementById(\"root2\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/App1.0961f857.png\";","module.exports = __webpack_public_path__ + \"static/media/App2.55a60b13.png\";","module.exports = __webpack_public_path__ + \"static/media/App3.615a94d1.png\";","module.exports = __webpack_public_path__ + \"static/media/App4.c084a890.png\";","module.exports = __webpack_public_path__ + \"static/media/PWA1.ce2d1259.png\";","module.exports = __webpack_public_path__ + \"static/media/PWA2.b26a8db2.png\";","module.exports = __webpack_public_path__ + \"static/media/PWA3.bcd406f3.png\";","module.exports = __webpack_public_path__ + \"static/media/codersera.35fc952a.png\";"],"sourceRoot":""}