{"version":3,"sources":["serviceWorker.js","components/Intro.tsx","components/counter.jsx","components/Counters.jsx","components/im.jsx","components/ProjCard.tsx","components/Rout.jsx","components/Header1.tsx","components/Footer.tsx","index.js"],"names":["Boolean","window","location","hostname","match","Intro","state","nextIcon","react_default","a","createElement","src","prevIcon","Jumbotron_default","style","textAlign","Container_default","fluid","Row_default","className","id","Col_default","lg","Card_default","bg","maxWidth","Header","Carousel_default","this","maxHeight","CarouselItem_default","Image_default","Body","Component","Counter","handleincrement","_this","setState","value","props","counter","handledecrement","_this2","onClick","getBadgeClass","incrementer","onDelete","onReset","classes","Counters","counters","handleDelete","counterid","filter","c","handleReset","counterId","handleReset1","map","components_counter","key","im","components_Counters","ProjCard","images","Appimages","fontSize","span","offset","text","image","alt","Button_default","variant","CardDeck_default","Rout","react_router_dom","react_router","path","component","exact","to","push","Header1","vertTrue","resizeEvent","bsBreakpoints","getCurrentBreakpoint","init","onresize","Navbar","expand","Brand","href","es_Image","rounded","height","width","color","Toggle","aria-controls","Collapse","Nav","Item","console","log","ButtonGroup_default","vertical","Footer","handleScroll","scroll","Navbar_default","ReactDOM","render","components_Header1","document","getElementById","components_Rout","components_Footer","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b46464c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Intro extends Component {\r\n  state = {\r\n    nextIcon: (\r\n      <span>\r\n        <img src=\"right.png\" />\r\n      </span>\r\n    ),\r\n    prevIcon: (\r\n      <span>\r\n        <img src=\"left.png\" />\r\n      </span>\r\n    )\r\n  };\r\n  render():\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | string\r\n    | number\r\n    | {}\r\n    | React.ReactNodeArray\r\n    | React.ReactPortal\r\n    | boolean\r\n    | null\r\n    | undefined {\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            Welcome to Coder's Era, a place for programmers to learn and succeed\r\n          </h1>\r\n        </Jumbotron>\r\n        <Container fluid>\r\n          <Row className=\"m-1\" id=\"MITPWA\">\r\n            <Col lg className=\"\">\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col lg className=\"align-self-center alert alert-secondary\">\r\n                    <h4 style={{ textAlign: \"center\" }}>\r\n                      The MIT student console is an App that helps all students\r\n                      stay on top of their work!\r\n                    </h4>\r\n                    <h5>\r\n                      <ul>\r\n                        <li>Calender for the Year</li>\r\n                        <li>Previous Year Question Papers</li>\r\n                        <li>Study Material</li>\r\n                        <li>Profiles</li>\r\n                        <li>Lost And Found</li>\r\n                      </ul>\r\n                    </h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card\r\n                      bg=\"warning\"\r\n                      className=\"my-1\"\r\n                      style={{ maxWidth: \"380px\" }}\r\n                    >\r\n                      <Card.Header>\r\n                        <Carousel\r\n                          className=\"d-flex flex-grow-1\"\r\n                          nextIcon={this.state.nextIcon}\r\n                          prevIcon={this.state.prevIcon}\r\n                          style={{\r\n                            maxHeight: \"565px\",\r\n                            maxWidth: \"366px\",\r\n                            textAlign: \"center\"\r\n                          }}\r\n                        >\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA1.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA2.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA3.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                        </Carousel>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <h3>MIT Student Console PWA</h3>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n\r\n            <Col lg className=\"\" id=\"MITApp\">\r\n              <Container className=\"d-flex align-items-baseline\" fluid>\r\n                <Row>\r\n                  <Col lg className=\"align-self-center alert alert-secondary\">\r\n                    <h4 style={{ textAlign: \"center\" }}>\r\n                      The MIT student console is an App that helps all students\r\n                      stay on top of their work!\r\n                    </h4>\r\n                    <h5>\r\n                      <ul>\r\n                        <li>Calender for the Year</li>\r\n                        <li>Previous Year Question Papers</li>\r\n                        <li>Study Material</li>\r\n                        <li>Profiles</li>\r\n                        <li>Lost And Found</li>\r\n                      </ul>\r\n                    </h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card\r\n                      bg=\"warning\"\r\n                      className=\"my-1\"\r\n                      style={{ maxWidth: \"380px\" }}\r\n                    >\r\n                      <Card.Header>\r\n                        <Carousel\r\n                          className=\"d-flex flex-grow-1\"\r\n                          nextIcon={this.state.nextIcon}\r\n                          prevIcon={this.state.prevIcon}\r\n                          style={{\r\n                            maxHeight: \"565px\",\r\n                            maxWidth: \"340px\",\r\n                            textAlign: \"center\"\r\n                          }}\r\n                        >\r\n                          <CarouselItem>\r\n                            <Image src=\"App1.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App2.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App3.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App4.png\" fluid />\r\n                          </CarouselItem>\r\n                        </Carousel>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <h3>MIT Student Console App</h3>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  incrementer() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n\r\n  handleincrement = () => {\r\n    this.setState({ value: (this.props.counter.value += 1) });\r\n  };\r\n  handledecrement = () => {\r\n    this.setState({ value: (this.props.counter.value -= 1) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.handledecrement()}\r\n        >\r\n          -\r\n        </button>\r\n        <span className={this.getBadgeClass()}>{this.incrementer()}</span>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            this.handleincrement();\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-warning btn-sm\"\r\n          onClick={() => this.props.onReset(this.props.counter.id)}\r\n        >\r\n          Reset Value\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClass() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n}\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ]\r\n  };\r\n  handleDelete = counterid => {\r\n    const counters = this.state.counters.filter(c => c.id !== counterid);\r\n    this.setState({ counters });\r\n  };\r\n  handleReset = counterId => {\r\n    this.state.counters[counterId - 1].value = 0;\r\n    this.setState(this.state.counters);\r\n  };\r\n  handleReset1 = () => {\r\n    this.state.counters = [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ];\r\n    this.setState(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-sm btn-primary m-2\"\r\n          onClick={this.handleReset1}\r\n        >\r\n          Reset All\r\n        </button>\r\n        {this.state.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            counter={counter}\r\n            onReset={this.handleReset}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counters;\r\n","import React, {Component} from \"react\";\r\nimport Counters from \"./Counters\";\r\n\r\nclass im extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n\r\n                <Counters/>\r\n                <img src={\"CricField.jpg\"}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default im;","import React, {Component} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nclass ProjCard extends Component {\r\n  images = [\"PWA1.png\", \"PWA2.png\", \"PWA3.png\"];\r\n  Appimages = [\"App1.png\", \"App2.png\", \"App3.png\", \"App4.png\"];\r\n\r\n  render():\r\n      | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n      | string\r\n      | number\r\n      | {}\r\n      | React.ReactNodeArray\r\n      | React.ReactPortal\r\n      | boolean\r\n      | null\r\n      | undefined {\r\n    return (\r\n        <div>\r\n          <Jumbotron>\r\n            <h1 style={{textAlign: \"center\"}}>\r\n              Welcome to Coder's Era, a place for programmers to learn and succeed\r\n            </h1>\r\n          </Jumbotron>\r\n          <Container fluid className=\"mb-3\">\r\n            {/*Container for Cards*/}\r\n            <Row style={{fontSize: 20}}>\r\n              <Col lg={{span: 4, offset: 2}} className=\"border-right\">\r\n                {/*Card 1*/}\r\n                <Card className=\"mt-1 h-100\" bg=\"dark\" text=\"white\">\r\n                  <Card.Header style={{textAlign: \"center\"}}>\r\n                    MIT Student Console\r\n                  </Card.Header>\r\n                  <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\r\n                    The MIT Student console enables the students an easy to use\r\n                    platform to get organized and stay on top of all their college\r\n                    activities and studies\r\n                    <hr/>\r\n                    <Carousel>\r\n                      {this.Appimages.map(image => (\r\n                          <CarouselItem>\r\n                            <img src={image} className=\"img-fluid\" alt={image}/>\r\n                          </CarouselItem>\r\n                      ))}\r\n                    </Carousel>\r\n                    <hr/>\r\n                    <div className=\"d-flex justify-content-between flex-wrap\">\r\n                      <Button variant=\"info\">MIT Student Console</Button>\r\n                      <Button variant=\"success\">Download</Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/*Card 2*/}\r\n              <Col lg={4}>\r\n                <Card className=\"mt-2 mt-lg-1 h-100\" bg=\"dark\" text=\"white\">\r\n                  <Card.Header style={{textAlign: \"center\"}}>\r\n                    MIT Student Console\r\n                  </Card.Header>\r\n\r\n                  <Card.Body className=\"d-flex flex-column justify-content-between text-center\">\r\n                    The MIT Student console PWA similar functionality to the App,\r\n                    but in a platform independent manner.\r\n                    <hr/>\r\n                    <Carousel>\r\n                      {this.images.map(image => (\r\n                          <CarouselItem>\r\n                            <img src={image} className=\"img-fluid\" alt={image}/>\r\n                          </CarouselItem>\r\n                      ))}\r\n                    </Carousel>\r\n                    <hr/>\r\n                    <div className=\"d-flex justify-content-between flex-wrap\">\r\n                      <Button variant=\"info\">MIT PWA</Button>\r\n                      <Button variant=\"success\">Link</Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Jumbotron>\r\n            <h2 className=\"text-center\">About Us</h2>\r\n            <br/>\r\n            <CardDeck>\r\n              <Card>\r\n                <Card.Header>Harsh</Card.Header>\r\n                <Card.Body>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\r\n                  et magna eu risus malesuada egestas. Quisque eu rutrum augue,\r\n                  vitae molestie orci. Etiam vehicula enim et ligula egestas,\r\n                  lacinia hendrerit tortor gravida. Phasellus rutrum aliquet arcu\r\n                  et varius. Sed malesuada enim dolor, eget imperdiet velit\r\n                  pretium non. Nullam id purus quis metus efficitur auctor nec sit\r\n                  amet velit. Nulla ullamcorper in mauris id dignissim. Nam\r\n                  dignissim, velit sed finibus pretium, libero mauris lobortis\r\n                  dolor, ut scelerisque lectus sem at dolor. Ut eget congue\r\n                  mauris. Praesent tristique porta arcu, id fringilla ante rhoncus\r\n                  eu. Donec non viverra tortor. Aliquam rhoncus ultrices justo, in\r\n                  tincidunt ipsum egestas vitae.\r\n                </Card.Body>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>Harsh</Card.Header>\r\n                <Card.Body>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\r\n                  et magna eu risus malesuada egestas. Quisque eu rutrum augue,\r\n                  vitae molestie orci. Etiam vehicula enim et ligula egestas,\r\n                  lacinia hendrerit tortor gravida. Phasellus rutrum aliquet arcu\r\n                  et varius. Sed malesuada enim dolor, eget imperdiet velit\r\n                  pretium non. Nullam id purus quis metus efficitur auctor nec sit\r\n                  amet velit. Nulla ullamcorper in mauris id dignissim. Nam\r\n                  dignissim, velit sed finibus pretium, libero mauris lobortis\r\n                  dolor, ut scelerisque lectus sem at dolor. Ut eget congue\r\n                  mauris. Praesent tristique porta arcu, id fringilla ante rhoncus\r\n                  eu. Donec non viverra tortor. Aliquam rhoncus ultrices justo, in\r\n                  tincidunt ipsum egestas vitae.\r\n                </Card.Body>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>Harsh</Card.Header>\r\n                <Card.Body>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam\r\n                  et magna eu risus malesuada egestas. Quisque eu rutrum augue,\r\n                  vitae molestie orci. Etiam vehicula enim et ligula egestas,\r\n                  lacinia hendrerit tortor gravida. Phasellus rutrum aliquet arcu\r\n                  et varius. Sed malesuada enim dolor, eget imperdiet velit\r\n                  pretium non. Nullam id purus quis metus efficitur auctor nec sit\r\n                  amet velit. Nulla ullamcorper in mauris id dignissim. Nam\r\n                  dignissim, velit sed finibus pretium, libero mauris lobortis\r\n                  dolor, ut scelerisque lectus sem at dolor. Ut eget congue\r\n                  mauris. Praesent tristique porta arcu, id fringilla ante rhoncus\r\n                  eu. Donec non viverra tortor. Aliquam rhoncus ultrices justo, in\r\n                  tincidunt ipsum egestas vitae.\r\n                </Card.Body>\r\n              </Card>\r\n            </CardDeck>\r\n          </Jumbotron>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjCard;\r\n","import React, {Component} from \"react\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Intro from \"./Intro\";\r\nimport im from \"./im\";\r\n\r\nimport ProjCard from \"./ProjCard\";\r\n\r\nclass Rout extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n        <Switch>\r\n            <Route path=\"/\" component={ProjCard} exact/>\r\n          <Route path={\"/wow\"} component={im}/>\r\n            <Route path=\"/action\" component={Intro}/>\r\n          <Redirect to=\"/\" push/>\r\n        </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default Rout;\r\n","import {Image, Nav, Navbar} from \"react-bootstrap\";\r\nimport React, {Component} from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport bsBreakpoints from \"bs-breakpoints\";\r\n\r\nclass Header1 extends Component {\r\n  state = {\r\n    vertTrue: false\r\n  };\r\n\r\n  resizeEvent = () => {\r\n    if (\r\n      !(\r\n        bsBreakpoints.getCurrentBreakpoint() === \"large\" ||\r\n        bsBreakpoints.getCurrentBreakpoint() === \"xLarge\"\r\n      )\r\n    ) {\r\n      this.setState({ vertTrue: true });\r\n    } else this.setState({ vertTrue: false });\r\n  };\r\n\r\n  render():\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | string\r\n    | number\r\n    | {}\r\n    | React.ReactNodeArray\r\n    | React.ReactPortal\r\n    | boolean\r\n    | null\r\n    | undefined {\r\n    return (\r\n      <div>\r\n        {bsBreakpoints.init()}\r\n        {window.onresize = this.resizeEvent}\r\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#/\">\r\n            <Image src=\"codersera.png\" rounded height=\"6%\" width=\"6%\" />\r\n            <span style={{ color: \"#00ff00\" }} className=\"m-1\">\r\n              Welcome To Coder's Era\r\n            </span>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle\r\n            aria-controls=\"basic-navbar-nav\"\r\n            className=\"ml-auto\"\r\n            onClick={this.resizeEvent}\r\n          />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto text-right\" id=\"test\">\r\n              <Nav.Item>\r\n                {console.log(bsBreakpoints.getCurrentBreakpoint())}\r\n                <ButtonGroup vertical={this.state.vertTrue}>\r\n                  <Button href=\"#/\" variant=\"outline-secondary\">\r\n                    Home\r\n                  </Button>\r\n                  <Button variant=\"outline-secondary\" href=\"#wow\">\r\n                    Counter\r\n                  </Button>\r\n                  <Button variant=\"outline-secondary\" href=\"#action\">\r\n                    Test\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Nav.Item>\r\n\r\n              {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>*/}\r\n            </Nav>\r\n            {/*<Form inline>\r\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                      <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>*/}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header1;\r\n","import React, {Component} from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Footer extends Component {\r\n    handleScroll = () => {\r\n        window.scroll(0, 0);\r\n    };\r\n\r\n    render():\r\n        | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n        | string\r\n        | number\r\n        | {}\r\n        | React.ReactNodeArray\r\n        | React.ReactPortal\r\n        | boolean\r\n        | null\r\n        | undefined {\r\n        return (\r\n            <div className=\"mt-3\">\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand={\"lg\"}>\r\n\r\n                    <Button variant=\"secondary\">\r\n                        Contact Us\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        className=\"ml-auto\"\r\n                        onClick={this.handleScroll}\r\n                    >\r\n                        Scroll to Top\r\n                    </Button>\r\n\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Rout from \"./components/Rout\";\r\nimport Header1 from \"./components/Header1\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nReactDOM.render(<Header1/>, document.getElementById(\"header1\"));\r\nReactDOM.render(<Rout/>, document.getElementById(\"root\"));\r\nReactDOM.render(<Footer/>, document.getElementById(\"footer1\"));\r\n//ReactDOM.render(<Header1/>, document.getElementById(\"root\"));\r\n//ReactDOM.render(<Intro/>,document.getElementById(\"root2\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}