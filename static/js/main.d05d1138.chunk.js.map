{"version":3,"sources":["serviceWorker.js","components/Header1.tsx","components/Intro.tsx","components/counter.jsx","components/Counters.jsx","components/im.jsx","components/JumboCaro.tsx","components/Rout.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Header1","state","vertTrue","resizeEvent","bsBreakpoints","getCurrentBreakpoint","_this","setState","react_default","a","createElement","init","onresize","this","Navbar","variant","bg","expand","Brand","href","Image","src","rounded","height","width","style","color","className","Toggle","aria-controls","onClick","Collapse","id","Nav","Item","console","log","ButtonGroup_default","vertical","Button_default","NavDropdown","title","Divider","Component","Intro","nextIcon","prevIcon","components_Header1","Jumbotron_default","textAlign","Container_default","fluid","Row_default","Col_default","lg","Card_default","maxWidth","Header","Carousel_default","maxHeight","CarouselItem_default","Image_default","Body","Counter","handleincrement","value","props","counter","handledecrement","_this2","getBadgeClass","incrementer","onDelete","onReset","classes","Counters","counters","handleDelete","counterid","filter","c","handleReset","counterId","handleReset1","map","components_counter","key","im","components_Counters","JumboCaro","Rout","react_router_dom","react_router","path","component","exact","to","push","ReactDOM","render","components_Rout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d05d1138.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { Image, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport bsBreakpoints from \"bs-breakpoints\";\r\n\r\nclass Header1 extends Component {\r\n  state = {\r\n    vertTrue: false\r\n  };\r\n\r\n  resizeEvent = () => {\r\n    if (\r\n      !(\r\n        bsBreakpoints.getCurrentBreakpoint() === \"large\" ||\r\n        bsBreakpoints.getCurrentBreakpoint() === \"xLarge\"\r\n      )\r\n    ) {\r\n      this.setState({ vertTrue: true });\r\n    } else this.setState({ vertTrue: false });\r\n  };\r\n\r\n  render():\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | string\r\n    | number\r\n    | {}\r\n    | React.ReactNodeArray\r\n    | React.ReactPortal\r\n    | boolean\r\n    | null\r\n    | undefined {\r\n    return (\r\n      <div>\r\n        {bsBreakpoints.init()}\r\n        {window.onresize = this.resizeEvent}\r\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#/\">\r\n            <Image src=\"codersera.png\" rounded height=\"6%\" width=\"6%\" />\r\n            <span style={{ color: \"#00ff00\" }} className=\"m-1\">\r\n              Welcome To Coder's Era\r\n            </span>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle\r\n            aria-controls=\"basic-navbar-nav\"\r\n            className=\"ml-auto\"\r\n            onClick={this.resizeEvent}\r\n          />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto text-right\" id=\"test\">\r\n              <Nav.Item>\r\n                {console.log(bsBreakpoints.getCurrentBreakpoint())}\r\n                <ButtonGroup vertical={this.state.vertTrue}>\r\n                  <Button href=\"#/\" variant=\"outline-secondary\">\r\n                    Home\r\n                  </Button>\r\n                  <Button variant=\"outline-secondary\" href=\"#wow\">\r\n                    Counter\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Nav.Item>\r\n\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            {/*<Form inline>\r\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                      <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>*/}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header1;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header1 from \"./Header1\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Intro extends Component {\r\n  state = {\r\n    nextIcon: (\r\n      <span>\r\n        <img src=\"right.png\" />\r\n      </span>\r\n    ),\r\n    prevIcon: (\r\n      <span>\r\n        <img src=\"left.png\" />\r\n      </span>\r\n    )\r\n  };\r\n  render():\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | string\r\n    | number\r\n    | {}\r\n    | React.ReactNodeArray\r\n    | React.ReactPortal\r\n    | boolean\r\n    | null\r\n    | undefined {\r\n    return (\r\n      <div>\r\n        <Header1 />\r\n        <Jumbotron>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            Welcome to Coder's Era, a place for programmers to learn and succeed\r\n          </h1>\r\n        </Jumbotron>\r\n        <Container fluid>\r\n          <Row className=\"m-1\" id=\"MITPWA\">\r\n            <Col lg className=\"\">\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col lg className=\"align-self-center alert alert-secondary\">\r\n                    <h4 style={{ textAlign: \"center\" }}>\r\n                      The MIT student console is an App that helps all students\r\n                      stay on top of their work!\r\n                    </h4>\r\n                    <h5>\r\n                      <ul>\r\n                        <li>Calender for the Year</li>\r\n                        <li>Previous Year Question Papers</li>\r\n                        <li>Study Material</li>\r\n                        <li>Profiles</li>\r\n                        <li>Lost And Found</li>\r\n                      </ul>\r\n                    </h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card\r\n                      bg=\"warning\"\r\n                      className=\"my-1\"\r\n                      style={{ maxWidth: \"380px\" }}\r\n                    >\r\n                      <Card.Header>\r\n                        <Carousel\r\n                          className=\"d-flex flex-grow-1\"\r\n                          nextIcon={this.state.nextIcon}\r\n                          prevIcon={this.state.prevIcon}\r\n                          style={{\r\n                            maxHeight: \"565px\",\r\n                            maxWidth: \"366px\",\r\n                            textAlign: \"center\"\r\n                          }}\r\n                        >\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA1.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA2.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"PWA3.png\" className=\"img-fluid\" />\r\n                          </CarouselItem>\r\n                        </Carousel>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <h3>MIT Student Console PWA</h3>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n\r\n            <Col lg className=\"\" id=\"MITApp\">\r\n              <Container className=\"d-flex align-items-baseline\" fluid>\r\n                <Row>\r\n                  <Col lg className=\"align-self-center alert alert-secondary\">\r\n                    <h4 style={{ textAlign: \"center\" }}>\r\n                      The MIT student console is an App that helps all students\r\n                      stay on top of their work!\r\n                    </h4>\r\n                    <h5>\r\n                      <ul>\r\n                        <li>Calender for the Year</li>\r\n                        <li>Previous Year Question Papers</li>\r\n                        <li>Study Material</li>\r\n                        <li>Profiles</li>\r\n                        <li>Lost And Found</li>\r\n                      </ul>\r\n                    </h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <Card\r\n                      bg=\"warning\"\r\n                      className=\"my-1\"\r\n                      style={{ maxWidth: \"380px\" }}\r\n                    >\r\n                      <Card.Header>\r\n                        <Carousel\r\n                          className=\"d-flex flex-grow-1\"\r\n                          nextIcon={this.state.nextIcon}\r\n                          prevIcon={this.state.prevIcon}\r\n                          style={{\r\n                            maxHeight: \"565px\",\r\n                            maxWidth: \"340px\",\r\n                            textAlign: \"center\"\r\n                          }}\r\n                        >\r\n                          <CarouselItem>\r\n                            <Image src=\"App1.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App2.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App3.png\" fluid />\r\n                          </CarouselItem>\r\n                          <CarouselItem>\r\n                            <Image src=\"App4.png\" fluid />\r\n                          </CarouselItem>\r\n                        </Carousel>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <h3>MIT Student Console App</h3>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  incrementer() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n\r\n  handleincrement = () => {\r\n    this.setState({ value: (this.props.counter.value += 1) });\r\n  };\r\n  handledecrement = () => {\r\n    this.setState({ value: (this.props.counter.value -= 1) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.handledecrement()}\r\n        >\r\n          -\r\n        </button>\r\n        <span className={this.getBadgeClass()}>{this.incrementer()}</span>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            this.handleincrement();\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-warning btn-sm\"\r\n          onClick={() => this.props.onReset(this.props.counter.id)}\r\n        >\r\n          Reset Value\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClass() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n}\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ]\r\n  };\r\n  handleDelete = counterid => {\r\n    const counters = this.state.counters.filter(c => c.id !== counterid);\r\n    this.setState({ counters });\r\n  };\r\n  handleReset = counterId => {\r\n    this.state.counters[counterId - 1].value = 0;\r\n    this.setState(this.state.counters);\r\n  };\r\n  handleReset1 = () => {\r\n    this.state.counters = [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ];\r\n    this.setState(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-sm btn-primary m-2\"\r\n          onClick={this.handleReset1}\r\n        >\r\n          Reset All\r\n        </button>\r\n        {this.state.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            counter={counter}\r\n            onReset={this.handleReset}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counters;\r\n","import React, {Component} from \"react\";\r\nimport Counters from \"./Counters\";\r\nimport Header1 from \"./Header1\";\r\n\r\nclass im extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header1/>\r\n                <Counters/>\r\n                <img src={\"CricField.jpg\"}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default im;","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nclass JumboCaro extends Component {\r\n  state = {\r\n    nextIcon: (\r\n      <span>\r\n        <img src=\"right.png\" />\r\n      </span>\r\n    ),\r\n    prevIcon: (\r\n      <span>\r\n        <img src=\"left.png\" />\r\n      </span>\r\n    )\r\n  };\r\n  render():\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | string\r\n    | number\r\n    | {}\r\n    | React.ReactNodeArray\r\n    | React.ReactPortal\r\n    | boolean\r\n    | null\r\n    | undefined {\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <Container className=\"d-flex align-items-baseline\" fluid>\r\n            <Row>\r\n              <Col lg>\r\n                <h4 style={{ textAlign: \"center\" }}>\r\n                  The MIT student console is an App that helps all students stay\r\n                  on top of their work!\r\n                </h4>\r\n                <h5>\r\n                  <ul>\r\n                    <li>Calender for the Year</li>\r\n                    <li>Previous Year Question Papers</li>\r\n                    <li>Study Material</li>\r\n                    <li>Profiles</li>\r\n                    <li>Lost And Found</li>\r\n                  </ul>\r\n                </h5>\r\n              </Col>\r\n              <Col lg className=\"d-flex justify-content-center\">\r\n                <Carousel\r\n                  className=\"m-2\"\r\n                  style={{ width: \"273px\" }}\r\n                  nextIcon={this.state.nextIcon}\r\n                  prevIcon={this.state.prevIcon}\r\n                >\r\n                  <CarouselItem>\r\n                    <Image src=\"App1.png\" fluid />\r\n                  </CarouselItem>\r\n                  <CarouselItem>\r\n                    <Image src=\"App2.png\" fluid />\r\n                  </CarouselItem>\r\n                  <CarouselItem>\r\n                    <Image src=\"App3.png\" fluid />\r\n                  </CarouselItem>\r\n                  <CarouselItem>\r\n                    <Image src=\"App4.png\" fluid />\r\n                  </CarouselItem>\r\n                </Carousel>\r\n              </Col>\r\n              <Col\r\n                lg\r\n                className=\"d-flex justify-content-center align-content-between\"\r\n              >\r\n                <Carousel\r\n                  className=\"m-1\"\r\n                  nextIcon={this.state.nextIcon}\r\n                  prevIcon={this.state.prevIcon}\r\n                  style={{ width: \"366px\" }}\r\n                >\r\n                  <CarouselItem>\r\n                    <Image src=\"PWA1.png\" fluid />\r\n                  </CarouselItem>\r\n                  <CarouselItem>\r\n                    <Image src=\"PWA2.png\" fluid />\r\n                  </CarouselItem>\r\n                  <CarouselItem>\r\n                    <Image src=\"PWA3.png\" fluid />\r\n                  </CarouselItem>\r\n                </Carousel>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JumboCaro;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header1 from \"./Header1\";\r\nimport Intro from \"./Intro\";\r\nimport im from \"./im\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport JumboCaro from \"./JumboCaro\";\r\n\r\nclass Rout extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={Intro} exact />\r\n          <Route path={\"/wow\"} component={im}/>\r\n          <Route path=\"/action\" component={JumboCaro}/>\r\n          <Redirect to=\"/\" push/>\r\n        </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default Rout;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Rout from \"./components/Rout\"\r\nReactDOM.render(<Rout/>,document.getElementById(\"root3\"));\r\n//ReactDOM.render(<Header1/>, document.getElementById(\"root\"));\r\n//ReactDOM.render(<Intro/>,document.getElementById(\"root2\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}