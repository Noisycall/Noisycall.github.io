{"version":3,"sources":["serviceWorker.js","components/Header1.tsx","components/Intro.tsx","components/counter.jsx","components/Counters.jsx","components/im.jsx","components/Rout.jsx","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","Header1","react_default","a","createElement","Navbar","variant","bg","expand","Brand","href","Image","src","rounded","height","width","style","color","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","Component","Intro","state","nextIcon","prevIcon","components_Header1","Jumbotron_default","textAlign","Container_default","Row_default","Col_default","md","Card_default","maxWidth","Header","Carousel_default","this","maxHeight","CarouselItem_default","Image_default","Body","Counter","handleincrement","_this","setState","value","props","counter","handledecrement","_this2","onClick","getBadgeClass","incrementer","onDelete","onReset","classes","Counters","counters","handleDelete","counterid","filter","c","handleReset","counterId","handleReset1","map","components_counter","key","im","components_Counters","Rout","react_router_dom","react_router","path","component","exact","to","push","ReactDOM","render","components_Rout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b139a792.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {Image, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass Header1 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#/\" >\r\n            <Image src=\"codersera.png\" rounded height=\"6%\" width=\"6%\"/>\r\n            <span style={{ color: \"#00ff00\" }} className=\"m-1\">Welcome To Coder's Era</span>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                <Nav.Link href=\"#wow\">Counter</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            {/*<Form inline>\r\n                      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                      <Button variant=\"outline-success\">Search</Button>\r\n                  </Form>*/}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header1;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport CarouselItem from \"react-bootstrap/CarouselItem\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Header1 from \"./Header1\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Intro extends Component {\r\n  state = {\r\n    nextIcon: (\r\n      <span>\r\n        <img src=\"right.png\" />\r\n      </span>\r\n    ),\r\n    prevIcon: (\r\n      <span>\r\n        <img src=\"left.png\" />\r\n      </span>\r\n    )\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header1 />\r\n        <Jumbotron>\r\n          <h1 style={{ textAlign: \"center\" }}>\r\n            Welcome to Coder's Era, a place for programmers to learn and succeed\r\n          </h1>\r\n        </Jumbotron>\r\n        <Container>\r\n          <Row className=\"justify-content-between\">\r\n            <Col md=\"auto\">\r\n              <Card\r\n                bg=\"warning\"\r\n                className=\"my-1\"\r\n                style={{ maxWidth: \"380px\", height: \"650px\" }}\r\n              >\r\n                <Card.Header>\r\n                  <Carousel\r\n                    nextIcon={this.state.nextIcon}\r\n                    prevIcon={this.state.prevIcon}\r\n                    style={{\r\n                      maxHeight: \"565px\",\r\n                      maxWidth: \"366px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    <CarouselItem>\r\n                      <Image src=\"PWA1.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <Image src=\"PWA2.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <Image src=\"PWA3.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                  </Carousel>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h3>MIT Student Console PWA</h3>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col md=\"auto\">\r\n              <Card\r\n                bg=\"warning\"\r\n                className=\"my-1\"\r\n                style={{ maxWidth: \"380px\", height: \"650px\" }}\r\n              >\r\n                <Card.Header>\r\n                  <Carousel\r\n                    nextIcon={this.state.nextIcon}\r\n                    prevIcon={this.state.prevIcon}\r\n                    style={{\r\n                      maxHeight: \"565px\",\r\n                      maxWidth: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    <CarouselItem>\r\n                      <Image src=\"App1.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <Image src=\"App2.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <Image src=\"App3.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                    <CarouselItem>\r\n                      <Image src=\"App4.png\" className=\"img-fluid\" />\r\n                    </CarouselItem>\r\n                  </Carousel>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h3>MIT Student Console App</h3>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Intro;\r\n","import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  incrementer() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n\r\n  handleincrement = () => {\r\n    this.setState({ value: (this.props.counter.value += 1) });\r\n  };\r\n  handledecrement = () => {\r\n    this.setState({ value: (this.props.counter.value -= 1) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => this.handledecrement()}\r\n        >\r\n          -\r\n        </button>\r\n        <span className={this.getBadgeClass()}>{this.incrementer()}</span>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            this.handleincrement();\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-sm btn-danger m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"btn btn-outline-warning btn-sm\"\r\n          onClick={() => this.props.onReset(this.props.counter.id)}\r\n        >\r\n          Reset Value\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClass() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n}\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ]\r\n  };\r\n  handleDelete = counterid => {\r\n    const counters = this.state.counters.filter(c => c.id !== counterid);\r\n    this.setState({ counters });\r\n  };\r\n  handleReset = counterId => {\r\n    this.state.counters[counterId - 1].value = 0;\r\n    this.setState(this.state.counters);\r\n  };\r\n  handleReset1 = () => {\r\n    this.state.counters = [\r\n      { id: 1, value: 0 },\r\n      { id: 2, value: 0 },\r\n      { id: 3, value: 0 },\r\n      { id: 4, value: 0 }\r\n    ];\r\n    this.setState(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-sm btn-primary m-2\"\r\n          onClick={this.handleReset1}\r\n        >\r\n          Reset All\r\n        </button>\r\n        {this.state.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={this.handleDelete}\r\n            counter={counter}\r\n            onReset={this.handleReset}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counters;\r\n","import React, {Component} from \"react\";\r\nimport Counters from \"./Counters\";\r\nimport Header1 from \"./Header1\";\r\n\r\nclass im extends Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header1/>\r\n                <Counters/>\r\n                <img src={\"CricField.jpg\"}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default im;","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header1 from \"./Header1\";\r\nimport Intro from \"./Intro\";\r\nimport Counters from \"./Counters\";\r\nimport im from \"./im\";\r\nimport {Redirect} from \"react-router-dom\";\r\nclass Rout extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n        <Switch>\r\n          <Route path=\"/\" component={Intro} exact />\r\n          <Route path={\"/wow\"} component={im}/>\r\n          <Redirect to=\"/\" push/>\r\n        </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default Rout;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { removeDotSegments } from \"uri-js\";\r\nimport Rout from \"./components/Rout\"\r\nReactDOM.render(<Rout/>,document.getElementById(\"root3\"));\r\n//ReactDOM.render(<Header1/>, document.getElementById(\"root\"));\r\n//ReactDOM.render(<Intro/>,document.getElementById(\"root2\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}